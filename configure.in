dnl Process this file with autoconf to produce a configure script.
dnl Created by Anjuta - will be overwritten
dnl If you don't want it to overwrite it,
dnl 	Please disable it in the Anjuta project configuration

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(gwget, 0.14)
AM_CONFIG_HEADER(config.h)

AC_PROG_INTLTOOL([0.11])

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AM_PROG_LIBTOOL

LIBGNOMEUI_REQUIRED=2.0.0
LIBGNOME_REQUIRED=2.0.0
GTK_REQUIRED=2.4.0
LIBGLADE_REQUIRED=2.0.0
GCONF_REQUIRED=1.1.11

PKG_CHECK_MODULES(GNOME, libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED
		 	  gtk+-2.0 	>= $GTK_REQUIRED 
			  libglade-2.0 	>= $LIBGLADE_REQUIRED)

AC_SUBST(GNOME_LIBS)
AC_SUBST(GNOME_CFLAGS)

GETTEXT_PACKAGE=gwget
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [The gettext package])
dnl Languages which your application supports
ALL_LINGUAS="bg cs en_CA es eu fi fr hu ja nl pa pl pt pt_BR ro ru tr"
AM_GLIB_GNU_GETTEXT

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

if test "x${prefix}" = "xNONE"; then
	AC_DEFINE_UNQUOTED(GNOME_ICONDIR, "${ac_default_prefix}/share/pixmaps", [Gnome pixmap directory])
else
	AC_DEFINE_UNQUOTED(GNOME_ICONDIR, "${prefix}/share/pixmaps", [Gnome pixmap directory])
fi
		                                                                                                                                                                   
if test "x${prefix}" = "xNONE"; then
	AC_DEFINE_UNQUOTED(PIXMAPS_DIR, "${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps", [pixmaps directory])
	pixmapsdir="${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps"
else
	AC_DEFINE_UNQUOTED(PIXMAPS_DIR, "${prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps", [pixmaps directory])
	pixmapsdir="${prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps"
fi
				                                                                                                                                                               
AC_SUBST(pixmapsdir)


dnl Epiphany Extension
dnl Much of this is cut&pasted from epiphany-extensions/configure.ac

AC_ARG_ENABLE([epiphany-extension],
	[  --enable-epiphany-extension   Enable Epiphany Extension ],
	enable_epiphany_extension=$enableval,
	enable_epiphany_extension=yes)

EPIPHANY_REQUIRED=1.2.1
LIBXML_REQUIRED=2.6.0
LIBGLIB_REQUIRED=2.4.0
LIBGTK_REQUIRED=2.4.0

AC_SUBST(EPIPHANY_REQUIRED)
AC_SUBST(LIBXML_REQUIRED)
AC_SUBST(LIBGLIB_REQUIRED)
AC_SUBST(LIBGTK_REQUIRED)

dnl fixme -- combine the dependencies of only the enabled plugins
PKG_CHECK_MODULES(EPIPHANY_DEPENDENCY, \
		  libxml-2.0 >= $LIBXML_REQUIRED \
		  libglade-2.0 \
		  glib-2.0 >= $LIBGLIB_REQUIRED \
		  gmodule-2.0 \
		  gtk+-2.0 >= $LIBGTK_REQUIRED \
		  epiphany-1.2 >= $EPIPHANY_REQUIRED,
		  have_epiphany_dependencies=yes,
		  have_epiphany_dependencies=no)
AC_SUBST(EPIPHANY_DEPENDENCY_CFLAGS)
AC_SUBST(EPIPHANY_DEPENDENCY_LIBS)

EPIPHANY_PREFIX="`$PKG_CONFIG --variable=prefix epiphany-1.2`"
AC_SUBST(EPIPHANY_PREFIX)

if test "x$have_epiphany_dependencies" = "xno"; then
   enable_epiphany_extension="no (missing dependencies)"
else
	if test "x$enable_epiphany_extension" != "xyes"; then
	   enable_epiphany_extension="disabled"
	fi
fi

AM_CONDITIONAL(ENABLE_EPIPHANY_EXTENSION, test "x$enable_epiphany_extension" = "xyes")

AC_OUTPUT([
Makefile
po/Makefile.in
include/Makefile
src/Makefile
pixmaps/Makefile
data/Makefile
gwget.desktop
epiphany-extension/Makefile
])

