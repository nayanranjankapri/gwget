dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(gwget, 0.97)
AM_CONFIG_HEADER(config.h)

AC_PATH_PROG(GCONFTOOL, gconftool-2)
AC_PROG_INTLTOOL([0.29])

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AM_PROG_LIBTOOL

AM_GCONF_SOURCE_2

LIBGNOMEUI_REQUIRED=2.0.0
LIBGNOME_REQUIRED=2.0.0
GTK_REQUIRED=2.6.0
LIBGLADE_REQUIRED=2.0.0
GCONF_REQUIRED=1.1.11
DBUS_GLIB_REQUIRED=0.33

PKG_CHECK_MODULES(GNOME, libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED
		 	  gtk+-2.0 	>= $GTK_REQUIRED 
			  gmodule-2.0
			  libglade-2.0 	>= $LIBGLADE_REQUIRED)

AC_SUBST(GNOME_LIBS)
AC_SUBST(GNOME_CFLAGS)

dnl ========= Check for DBUS
PKG_CHECK_MODULES([DBUS], [dbus-glib-1 >= $DBUS_GLIB_REQUIRED],
        [enable_dbus=yes],[enable_dbus=no])
AC_SUBST([DBUS_CFLAGS])
AC_SUBST([DBUS_LIBS])

if test "x$enable_dbus" = "xno"; then
        AC_MSG_WARN([DBUS support is disabled since dbus $DBUS_GLIB_REQUIRED or higher was not found])
fi

if test "x$enable_dbus" = "xyes" ; then
        AC_PATH_PROG([DBUS_BINDING_TOOL], [dbus-binding-tool], [no])

        if test x$DBUS_BINDING_TOOL = "xno" ; then
                AC_MSG_ERROR([dbus-binding-tool executable not found in your path - should be installed with dbus glib bindings])
        fi

        AC_DEFINE([ENABLE_DBUS],[1],[Define if DBUS support is enabled])

        DBUS_VERSION=`$PKG_CONFIG --modversion dbus-glib-1 | sed 's/0\.\([[0-9]]*\)\.\{0,1\}\([[0-9]]*\)/\1/'`
        AC_DEFINE_UNQUOTED(DBUS_VERSION, $DBUS_VERSION, [DBUS version.])
fi

GETTEXT_PACKAGE=gwget
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [The gettext package])
dnl Languages which your application supports
ALL_LINGUAS="ar bg ca cs da de el en_CA es eu fi fr hu it ja lt mk ne nl pa pl pt pt_BR ro ru rw sk sq sv tr uk zh_CN zh_TW"
AM_GLIB_GNU_GETTEXT

GWGET_CFLAGS="$DBUS_CFLAGS"
GWGET_LIBS="$DBUS_LIBS -lz"

AC_SUBST(GWGET_CFLAGS)
AC_SUBST(GWGET_LIBS)
AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

if test "x${prefix}" = "xNONE"; then
	AC_DEFINE_UNQUOTED(GNOME_ICONDIR, "${ac_default_prefix}/share/pixmaps", [Gnome pixmap directory])
else
	AC_DEFINE_UNQUOTED(GNOME_ICONDIR, "${prefix}/share/pixmaps", [Gnome pixmap directory])
fi
		                                                                                                                                                                   
if test "x${prefix}" = "xNONE"; then
	AC_DEFINE_UNQUOTED(PIXMAPS_DIR, "${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps", [pixmaps directory])
	pixmapsdir="${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps"
else
	AC_DEFINE_UNQUOTED(PIXMAPS_DIR, "${prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps", [pixmaps directory])
	pixmapsdir="${prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps"
fi
				                                                                                                                                                               
AC_SUBST(pixmapsdir)

AC_ARG_ENABLE([epiphany-extension],
		[  --enable-epiphany-extension   Enable Epiphany Extension ],
		enable_epiphany_extension=$enableval,
		enable_epiphany_extension=yes)



AC_MSG_CHECKING([which epiphany to use])

EPHY_VER=
AC_ARG_WITH([epiphany-version],
        AC_HELP_STRING([--with-epiphany-version@<:@=1.6|1.8|1.10@:>@],
                       [Whether to use epiphany version 1.6 or 1.8 or 1.10 (default 1.6)]),
        [EPHY_VER="$withval"])

dnl try to autodetect Epiphany 1.2, 1.4, 1.6, 1.8 or 1.10
EPHY_AUTODETECT="(autodetect)"
if pkg-config --exists epiphany-1.10; then
        EPHY_VER=1.10
elif pkg-config --exists epiphany-1.8; then
       	EPHY_VER=1.8
elif pkg-config --exists epiphany-1.6; then
       	EPHY_VER=1.6
elif pkg-config --exists epiphany-1.4; then
	EPHY_VER=1.4
elif pkg-config --exists epiphany-1.2; then
       	EPHY_VER=1.2
fi


EPIPHANY_REQUIRED=
EPIPHANY_PKGCONFIG=
EPIPHANY_SHORTVER=

if test "x$EPHY_VER" = "x1.2"; then
          EPIPHANY_PKGCONFIG=epiphany-1.2
          EPIPHANY_REQUIRED=1.2.0
          EPIPHANY_SHORTVER=12
elif test "x$EPHY_VER" = "x1.4"; then
          EPIPHANY_PKGCONFIG=epiphany-1.4
          EPIPHANY_REQUIRED=1.4.0
          EPIPHANY_SHORTVER=14
elif test "x$EPHY_VER" = "x1.6"; then
          EPIPHANY_PKGCONFIG=epiphany-1.6
          EPIPHANY_REQUIRED=1.6.0
          EPIPHANY_SHORTVER=16
elif test "x$EPHY_VER" = "x1.8"; then
          EPIPHANY_PKGCONFIG=epiphany-1.8
          EPIPHANY_REQUIRED=1.7.0
          EPIPHANY_SHORTVER=18
elif test "x$EPHY_VER" = "x1.10"; then
          EPIPHANY_PKGCONFIG=epiphany-1.10
          EPIPHANY_REQUIRED=1.9.0
          EPIPHANY_SHORTVER=110
else
     	AC_MSG_RESULT([no epiphany installed])
fi

if test -n "$EPIPHANY_SHORTVER" ; then
AC_DEFINE_UNQUOTED(EPHY_VERSION, "$EPIPHANY_SHORTVER",
       [Define to the Epiphany version (12, 14, 16, 18, or 110)])
AC_MSG_RESULT([$EPHY_VER $EPHY_AUTODETECT])

LIBGLIB_REQUIRED=2.4.0
LIBGTK_REQUIRED=2.4.0

AC_SUBST(EPIPHANY_REQUIRED)
AC_SUBST(LIBGLIB_REQUIRED)
AC_SUBST(LIBGTK_REQUIRED)

PKG_CHECK_MODULES(EPIPHANY_DEPENDENCY, \
                  glib-2.0 >= $LIBGLIB_REQUIRED \
                  gmodule-2.0 \
                  gtk+-2.0 >= $LIBGTK_REQUIRED \
                  $EPIPHANY_PKGCONFIG >= $EPIPHANY_REQUIRED \
		  )
AC_SUBST(EPIPHANY_DEPENDENCY_CFLAGS)
AC_SUBST(EPIPHANY_DEPENDENCY_LIBS)

if test "x$EPHY_VER" = "x1.2"; then
EPIPHANY_EXTENSIONS_DIR="`$PKG_CONFIG --variable=libdir epiphany-1.2`/epiphany/extensions"
else
EPIPHANY_EXTENSIONS_DIR="`$PKG_CONFIG --variable=extensionsdir epiphany-$EPHY_VER`"
fi
AC_SUBST([EPIPHANY_EXTENSIONS_DIR])

else
	enable_epiphany_extension=no
fi
AM_CONDITIONAL(ENABLE_EPIPHANY_EXTENSION, test "x$enable_epiphany_extension" = "xyes")

AM_CONDITIONAL([ENABLE_DBUS], [test "x$enable_dbus" = "xyes"])
AM_CONDITIONAL([DBUS_TOOL_NO_PREFIX], [test "x$DBUS_VERSION" = "x33"])

AC_ARG_WITH([extension-prefix],
    [  --with-extension-prefix=path              Epiphany extension prefix],    
    [extension_prefix=$withval],
    [extension_prefix=/]
)
EXTENSION_PREFIX="$extension_prefix"
AC_SUBST([EXTENSION_PREFIX])

dnl Stuff for the CORBA interface
AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)

ORBIT_IDL="`$PKG_CONFIG --variable=orbit_idl ORBit-2.0`"
AC_SUBST(ORBIT_IDL)
                                                                                                                                                              
AC_OUTPUT([
Makefile
po/Makefile.in
include/Makefile
src/Makefile
pixmaps/Makefile
data/Makefile
gwget.desktop
epiphany-extension/Makefile
])
